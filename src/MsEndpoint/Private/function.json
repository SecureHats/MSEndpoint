[
  "using namespace System.Net",
  "",
  "# Input bindings are passed in via param block.",
  "param($Request, $TriggerMetadata)",
  "",
  "# Write to the Azure Functions log stream.",
  "Write-Host \"PowerShell HTTP trigger function processed a request.\"",
  "",
  "# Interact with query parameters or the body of the request.",
  "$workspaceName  = $Request.Query.workspace",
  "$tableName      = $Request.Query.tableName",
  "$format         = $Request.Query.format",
  "$dataInput      = $Request.RawBody",
  "",
  "Write-Host \"Processing File input\"",
  "if ($format -eq 'csv') {",
  "    try {",
  "        Write-Output \"Converting file from CSV to Object\"",
  "        $dataObject = $dataInput | ConvertFrom-CSV",
  "    }",
  "    catch {",
  "        Write-Output \"Unable to process CSV file\"",
  "    }",
  "}",
  "else {",
  "    try {",
  "        Write-Output \"Converting file from JSON to Object\"",
  "        $dataObject = $dataInput | ConvertFrom-JSON",
  "    }",
  "    catch {",
  "        Write-Output \"Unable to process JSON file\"",
  "    }",
  "}",
  "",
  "Set-Item Env:\\SuppressAzurePowerShellBreakingChangeWarnings \"true\"",
  "$rfc1123date = [DateTime]::UtcNow.ToString(\"r\")",
  "",
  "Function Build-Signature {",
  "    param (",
  "        [Parameter(Mandatory = $true)]",
  "        [String]$workspaceId,",
  "",
  "        [Parameter(Mandatory = $true)]",
  "        [SecureString]$workspaceKey,",
  "",
  "        [Parameter(Mandatory = $true)]",
  "        [Int32]$contentLength",
  "    )",
  "",
  "    $xHeaders = \"x-ms-date:\" + $rfc1123date",
  "    $stringToHash = \"POST\" + \"`n\" + $contentLength + \"`n\" + \"application/json\" + \"`n\" + $xHeaders + \"`n\" + \"/api/logs\"",
  "    $bytesToHash = [Text.Encoding]::UTF8.GetBytes($stringToHash)",
  "    $keyBytes = [Convert]::FromBase64String((ConvertFrom-SecureString -SecureString $workspaceKey -AsPlainText))",
  "    $sha256 = New-Object System.Security.Cryptography.HMACSHA256",
  "    $sha256.Key = $keyBytes",
  "    $calculatedHash = $sha256.ComputeHash($bytesToHash)",
  "    $encodedHash = [Convert]::ToBase64String($calculatedHash)",
  "    $authorization = 'SharedKey {0}:{1}' -f $workspaceId, $encodedHash",
  "",
  "    return $authorization",
  "}",
  "",
  "# Create the function to create and post the request",
  "Function Set-LogAnalyticsData {",
  "    param (",
  "        [Parameter(Mandatory = $true)]",
  "        [string]$workspaceId,",
  "",
  "        [Parameter(Mandatory = $true)]",
  "        [securestring]$workspaceKey,",
  "",
  "        [Parameter(Mandatory = $true)]",
  "        [array]$body,",
  "",
  "        [Parameter(Mandatory = $true)]",
  "        [string]$logType",
  "    )",
  "",
  "    $properties = @{",
  "        \"WorkspaceId\"   = $workspaceId",
  "        \"WorkspaceKey\"  = $workspaceKey",
  "        \"contentLength\" = $body.Length",
  "    }",
  "",
  "    $payload = @{",
  "        \"Headers\"     = @{",
  "            \"Authorization\" = Build-Signature @properties",
  "            \"Log-Type\"      = $logType",
  "            \"x-ms-date\"     = $rfc1123date",
  "        }",
  "        \"method\"      = \"POST\"",
  "        \"contentType\" = \"application/json\"",
  "        \"uri\"         = \"https://{0}.ods.opinsights.azure.com/api/logs?api-version=2016-04-01\" -f $workspaceId",
  "        \"body\"        = $body",
  "    }",
  "",
  "    $response = Invoke-WebRequest @payload -UseBasicParsing",
  "",
  "    if (-not($response.StatusCode -eq 200)) {",
  "        Write-Warning \"Unable to send data to Data Log Collector table\"",
  "        break",
  "    }",
  "    else {",
  "        Write-Output \"Uploaded to Data Log Collector table [$($logType + '_CL')] at [$rfc1123date]\"",
  "    }",
  "}",
  "",
  "function Process-Payload {",
  "    param (",
  "        [Parameter(Mandatory = $true)]",
  "        [array]$customData",
  "",
  "    )",
  "",
  "    $postObject = @{",
  "        \"workspaceId\"  = $workspaceId",
  "        \"WorkspaceKey\" = $workspaceKey",
  "        \"logType\"      = $tableName",
  "        \"body\"         = ''",
  "    }",
  "",
  "    $tempdata = @()",
  "    $tempDataSize = 0",
  "",
  "    if ((($customData | ConvertTo-Json -depth 20).Length) -gt 25MB) {",
  "        Write-Host \"Upload is over 25MB, needs to be split\"",
  "        foreach ($record in $customData) {",
  "            $tempdata += $record",
  "            $tempDataSize += ($record | ConvertTo-Json -depth 20).Length",
  "            if ($tempDataSize -gt 25MB) {",
  "                $postObject.body = ([System.Text.Encoding]::UTF8.GetBytes(($tempdata | ConvertTo-Json)))",
  "",
  "                write-Host \"Sending block data = $TempDataSize\"",
  "                Set-LogAnalyticsData @postObject",
  "",
  "                $tempdata = $null",
  "                $tempdata = @()",
  "                $tempDataSize = 0",
  "            }",
  "        }",
  "        $postObject.body = ([System.Text.Encoding]::UTF8.GetBytes(($tempdata | ConvertTo-Json -depth 20)))",
  "",
  "        Write-Host \"Sending left over data = $Tempdatasize\"",
  "        Set-LogAnalyticsData @postObject",
  "        $tempdata = $null",
  "        $tempdata = @()",
  "        $tempDataSize = 0",
  "    }",
  "    else {",
  "        $postObject.body = ([System.Text.Encoding]::UTF8.GetBytes(($customData | ConvertTo-Json -depth 20)))",
  "    }",
  "    Write-Host \"Sending data\"",
  "    Set-LogAnalyticsData @postObject",
  "}",
  "",
  "",
  "try {",
  "    Write-Output \"Connecting to workspace [$($WorkspaceName)]\"",
  "    $workspace = Get-AzResource `",
  "        -Name \"$WorkspaceName\" `",
  "        -ResourceType 'Microsoft.OperationalInsights/workspaces'",
  "",
  "    $ResourceGroupName = $workspace.ResourceGroupName",
  "    $workspaceName = $workspace.Name",
  "    $workspaceId = (Get-AzOperationalInsightsWorkspace -ResourceGroupName $resourceGroupName -Name $workspaceName).CustomerId.Guid",
  "",
  "    Write-Host \"Workspace Name: $($workspaceName)\"",
  "    Write-Host \"Workspace Id: $($workspaceId)\"",
  "}",
  "catch {",
  "    Write-Warning -Message \"Log Analytics workspace [$($WorkspaceName)] not found in the current context\"",
  "    break",
  "}",
  "",
  "$workspaceKey = (Get-AzOperationalInsightsWorkspaceSharedKeys `",
  "        -ResourceGroupName $ResourceGroupName `",
  "        -Name $WorkspaceName).PrimarySharedKey `",
  "| ConvertTo-SecureString -AsPlainText -Force",
  "",
  "Write-Output 'Upload data to workspace'",
  "Process-Payload -customData $dataObject",
  "",
  "# Associate values to output bindings by calling 'Push-OutputBinding'.",
  "Push-OutputBinding -Name Response -Value ([HttpResponseContext]@{",
  "        StatusCode = [HttpStatusCode]::OK",
  "        Body       = $response",
  "    })"
]
